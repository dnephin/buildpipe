version: 2

defaults:
  docker: &default_docker
    - image: dnephin/circleci-alpine-step@sha256:75f925e006ea379870ea7d2ce6539072e584f62a74063d73a9b1c2fd75ec233f
  steps:
    - setup_remote_docker: &setup_docker
        version: 20.10.6
  filters: &default_filters
    branches: {ignore: [gh-pages]}
    tags: {only: '/v[0-9]+(\.[0-9]+)*/'}


jobs:

  build:
    docker: [{image: 'docker:17.07-git'}]
    steps:
      - checkout
      - setup_remote_docker: *setup_docker
      - run: docker version
      - run:
          name: "Build dobi binary"
          command: |
            apk add --no-cache bash
            bash -c 'cat dockerfiles/Dockerfile.build <(echo COPY . .) | \
                docker build -t dobi-dev -f - .'
            docker run --name build dobi-dev bash -ec 'go mod vendor; go generate ./...; go install .'
            mkdir /work
            docker cp build:/go/bin/dobi /work/dobi
            docker cp build:/go/src/github.com/dnephin/dobi/vendor /work/
      - persist_to_workspace:
          root: /work
          paths: [dobi, vendor]

  lint:
    docker:
      - image: "golangci/golangci-lint:v1.42.1"
    steps:
      - checkout
      - attach_workspace: {at: /work}
      - run:
          name: "Lint"
          command: |
            mv /work/vendor .
            golangci-lint run -v ./...

  cross:
    docker: *default_docker
    steps:
      - checkout
      - setup_remote_docker: *setup_docker
      - attach_workspace: {at: /work}
      - run:
          name: "Build binaries"
          command: script/ci/step dobi binary
      - store_artifacts:
          path: dist/bin
          destination: bin

  docs:
    docker: *default_docker
    steps:
      - checkout
      - setup_remote_docker: *setup_docker
      - attach_workspace: {at: /work}
      - run:
          name: "Build documentation"
          command: script/ci/step dobi docs-build
      - store_artifacts:
          path: docs/build/html.tar.gz
          destination: docs

  test-unit:
    docker: *default_docker
    steps:
      - checkout
      - setup_remote_docker: *setup_docker
      - attach_workspace: {at: /work}
      - run:
          name: "Run unit tests"
          command: script/ci/step dobi test-unit

  test-examples:
    docker: *default_docker
    steps:
      - checkout
      - setup_remote_docker: *setup_docker
      - attach_workspace: {at: /work}
      - run:
          name: "Run example tests"
          command: |
            cp -r "$DOCKER_CERT_PATH" ./circleci-certs
            script/ci/step dobi test-examples
      - store_artifacts:
          path: _results
          destination: test-examples-results

  release:
    docker: [{image: 'docker:17.07-git'}]
    steps:
      - checkout
      - setup_remote_docker: *setup_docker
      - attach_workspace: {at: /work}
      - run: |
          apk add --no-cache bash
          docker login -u $DOCKER_USER -p $DOCKER_PASS
          export DOBI_VERSION="$CIRCLE_TAG"
          script/ci/step dobi release

workflows:
  version: 2
  ci:
    jobs:
      - build:
          filters: *default_filters
      - lint:
          requires: [build]
          filters: *default_filters
      - cross:
          requires: [build]
          filters: *default_filters
      - docs:
          requires: [build]
          filters: *default_filters
      - test-unit:
          requires: [build]
          filters: *default_filters
      - test-examples:
          requires: [build]
          filters: *default_filters
      - release:
          requires: [lint, cross, docs, test-unit, test-examples]
          filters:
            tags: {only: '/v[0-9]+(\.[0-9]+)*/'}
            branches: {ignore: '/.*/'}
