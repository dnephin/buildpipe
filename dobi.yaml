#
# dobi.yaml - resources for building, testing, and developing dobi
#

meta:
    project: dobi
    default: all
    exec-id: david
#
# Mounts
#

mount=source:
    bind: .
    path: /go/src/github.com/dnephin/dobi

mount=dist:
    bind: ./dist/bin/
    path: /go/bin/

mount=projectdir:
    bind: .
    path: '{fs.projectdir}'

#
# Images
#

image=builder:
    image: dobi-dev
    context: dockerfiles/
    dockerfile: Dockerfile.build

image=linter:
    image: dobi-linter
    dockerfile: dockerfiles/Dockerfile.lint

image=dist-img:
    image: dnephin/dobi
    tags: ["{env.DOBI_VERSION}"]
    dockerfile: dockerfiles/Dockerfile.dist
    annotations:
      description: "Build the distribution image"

image=releaser:
    image: dobi-release
    context: dockerfiles/
    dockerfile: Dockerfile.release

image=docs-img:
    image: dobi-docs-dev
    context: dockerfiles/
    dockerfile: Dockerfile.docs

image=example-tester:
    image: dobi-test-examples
    dockerfile: Dockerfile.test-examples
    context: dockerfiles/

image=circleci-alpine:
    image: dnephin/circleci-alpine-step
    tags: [latest]
    dockerfile: Dockerfile.circleci
    context: dockerfiles/ci

#
# Jobs
#

job=binary:
    use: builder
    artifact: ./dist/bin/
    mounts: [source, dist]
    command: script/build
    env:
      - "DOBI_BUILD_OSARCH={env.DOBI_BUILD_OSARCH:}"
    annotations:
      description: "Build the static binary"
      tags: [binary]

job=watch:
    use: builder
    mounts: [source]
    interactive: true
    depends: [mocks]
    annotations:
      description: "Watch for code changes and run the unit tests"
      tags: [test]
    command: |
      filewatcher -x vendor gotestsum -- -test.timeout 10s
    env: ["GOTESTSUM_FORMAT=short-verbose"]

job=shell:
    use: builder
    mounts: [source, dist]
    interactive: true
    provide-docker: true
    command: bash
    annotations:
      description: "Start an interactive development environment"

job=test-unit:
    use: builder
    mounts: [source]
    depends: [mocks]
    interactive: true
    annotations:
      tags: [test]
    command: gotestsum
    env: ["GOTESTSUM_FORMAT={env.GOTESTSUM_FORMAT:short}"]

job=lint:
    use: linter
    mounts: [source]
    depends: [mocks]
    annotations:
      description: "Run static checks"

job=lint-shell:
    use: linter
    mounts: [source]
    command: bash
    interactive: true

job=github-release:
    use: releaser
    mounts: [dist]
    env:
     - "GITHUB_TOKEN={env.GITHUB_TOKEN}"
     - "DOBI_VERSION={env.DOBI_VERSION}"

job=release-version:
    use: builder
    mounts: [dist]
    command: "bash -ec \"dobi-linux --version | awk '{print $3}'\""

job=docs-build:
    use: docs-img
    artifact: ./docs/build/html.tar.gz
    mounts: [source]
    command: docs/script/build
    depends: [binary-linux]
    annotations:
      tags: [docs]

job=docs-shell:
    use: docs-img
    mounts: [source]
    interactive: true
    command: bash
    annotations:
      tags: [docs]

job=docs-watch:
    use: docs-img
    mounts: [source]
    interactive: true
    command: docs/script/watch
    annotations:
      tags: [docs]

job=docs:
    use: docs-img
    mounts: [source]
    interactive: true
    ports: ["8080:8080"]
    command: docs/script/serve
    depends: ['docs-build']
    annotations:
      description: "Build docs and start an http server to preview the docs"
      tags: [docs]

job=mocks:
    use: builder
    mounts: [source]
    command: "go generate ./..."
    annotations:
      tags: [test]

job=deps:
    use: builder
    mounts: [source]
    command: "go mod vendor"
    sources: ['go.mod', 'go.sum']
    artifact: vendor/
    annotations:
      description: "Install go modules"


job=test-examples:
    use: example-tester
    provide-docker: true
    interactive: true
    mounts: [projectdir, dist]
    entrypoint: script/test-examples
    working-dir: '{fs.projectdir}'
    depends: [build-rtf, binary-linux]
    env:
      - 'DOCKER_API_VERSION={env.DOCKER_API_VERSION:}'
      - 'COMPOSE_API_VERSION={env.DOCKER_API_VERSION:}'
      - 'DOBI_NO_BIND_MOUNT={env.DOBI_NO_BIND_MOUNT:}'
      - 'DOBI_EXAMPLE={env.DOBI_EXAMPLE:}'
    artifact: _results/

job=examples-shell:
    use: example-tester
    provide-docker: true
    interactive: true
    mounts: [projectdir, dist]
    entrypoint: sh
    working-dir: '{fs.projectdir}'

job=build-rtf:
    use: builder
    mounts: [source, dist]
    command: go get github.com/linuxkit/rtf
    artifact: dist/bin/rtf
    annotations:
      tags: [test]

image=refactorer:
    image: dnephin/go-refactor
    tags: [latest]
    pull: 72h

job=refactor-shell:
    use: refactorer
    mounts: [source]
    interactive: true
    working-dir: /go/src/github.com/dnephin/dobi
    env: [GOPATH=/go]
    command: sh
    annotations:
      description: "Start an interactive shell for running go refactor tools"


env=linux-only:
    variables: [DOBI_BUILD_OSARCH=linux/amd64]

#
# Aliases
#

alias=test:
    tasks: [test-unit]
    annotations:
      description: "Run all tests"

alias=all:
    tasks: [lint, test, binary]
    annotations:
      description: "Run all lint and build tasks"

alias=binary-linux:
    tasks: [linux-only, binary]
    annotations:
      tags: [binary]

alias=release:
    tasks:
      - 'binary'
      - 'release-version:capture(DOBI_VERSION)'
      - 'github-release'
      - 'dist-img:push'
    annotations:
      tags: [release]
